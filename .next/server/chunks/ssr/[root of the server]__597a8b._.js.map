{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 15, "column": 0}, "map": {"version":3,"sources":["file:///Users/cloudbyte-mac2/Downloads/rep/fukushi/src/model/schemas.ts"],"sourcesContent":["import { z } from 'zod';\n\n// アカウント\nexport const AccountSchema = z.object({\n  accountId: z.number(),\n  accountName: z.string(),\n  createdAt: z.string(),\n  updatedAt: z.string(),\n});\n\n// 患者\nexport const KanjyaSchema = z.object({\n  kanjyaId: z.number(),\n  accountId: z.number(),\n  kanjyaName: z.string(),\n  createdAt: z.string(),\n  updatedAt: z.string(),\n});\n\n// コメント\nexport const CommentSchema = z.object({\n  commentId: z.number(),\n  accountId: z.number(),\n  kanjyaId: z.number(),\n  content: z.string(),\n  createAccountName: z.string(),\n  createdAt: z.string(),\n  updatedAt: z.string(),\n});\n\nexport const DbSchema = z.object({\n  accountList: z.array(AccountSchema),\n  kanjyaList: z.array(KanjyaSchema),\n  commentList: z.array(CommentSchema),\n});\n\n// 型の推論（オプション）\nexport type Account = z.infer<typeof AccountSchema>;\nexport type Kanjya = z.infer<typeof KanjyaSchema>;\nexport type Comment = z.infer<typeof CommentSchema>;\nexport type DbSchemaType = z.infer<typeof DbSchema>;"],"names":[],"mappings":";;;;;;AAAA;;AAGO,MAAM,gBAAgB,oIAAA,CAAA,IAAC,CAAC,MAAM,CAAC;IACpC,WAAW,oIAAA,CAAA,IAAC,CAAC,MAAM;IACnB,aAAa,oIAAA,CAAA,IAAC,CAAC,MAAM;IACrB,WAAW,oIAAA,CAAA,IAAC,CAAC,MAAM;IACnB,WAAW,oIAAA,CAAA,IAAC,CAAC,MAAM;AACrB;AAGO,MAAM,eAAe,oIAAA,CAAA,IAAC,CAAC,MAAM,CAAC;IACnC,UAAU,oIAAA,CAAA,IAAC,CAAC,MAAM;IAClB,WAAW,oIAAA,CAAA,IAAC,CAAC,MAAM;IACnB,YAAY,oIAAA,CAAA,IAAC,CAAC,MAAM;IACpB,WAAW,oIAAA,CAAA,IAAC,CAAC,MAAM;IACnB,WAAW,oIAAA,CAAA,IAAC,CAAC,MAAM;AACrB;AAGO,MAAM,gBAAgB,oIAAA,CAAA,IAAC,CAAC,MAAM,CAAC;IACpC,WAAW,oIAAA,CAAA,IAAC,CAAC,MAAM;IACnB,WAAW,oIAAA,CAAA,IAAC,CAAC,MAAM;IACnB,UAAU,oIAAA,CAAA,IAAC,CAAC,MAAM;IAClB,SAAS,oIAAA,CAAA,IAAC,CAAC,MAAM;IACjB,mBAAmB,oIAAA,CAAA,IAAC,CAAC,MAAM;IAC3B,WAAW,oIAAA,CAAA,IAAC,CAAC,MAAM;IACnB,WAAW,oIAAA,CAAA,IAAC,CAAC,MAAM;AACrB;AAEO,MAAM,WAAW,oIAAA,CAAA,IAAC,CAAC,MAAM,CAAC;IAC/B,aAAa,oIAAA,CAAA,IAAC,CAAC,KAAK,CAAC;IACrB,YAAY,oIAAA,CAAA,IAAC,CAAC,KAAK,CAAC;IACpB,aAAa,oIAAA,CAAA,IAAC,CAAC,KAAK,CAAC;AACvB"}},
    {"offset": {"line": 50, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 56, "column": 0}, "map": {"version":3,"sources":["file:///Users/cloudbyte-mac2/Downloads/rep/fukushi/src/context/AccountProvider.tsx"],"sourcesContent":["\"use client\";\n\nimport React, { createContext, useContext, useState, ReactNode } from \"react\";\nimport { Account, AccountSchema } from \"../model/schemas\";\n\ntype AccountContextType = {\n  selectedAccount: Account | null;\n  setSelectedAccount: (account: Account | null) => void;\n};\n\n// 创建 Context\nconst AccountContext = createContext<AccountContextType | null>(null);\n\n// 创建一个提供者组件\nexport const AccountProvider = ({ children }: { children: ReactNode }) => {\n  // 选中的用户\n  const [selectedAccount, setSelectedAccount] = useState<Account | null>(null);\n\n  const updateSelectedAccount = (newAccount: Account) => {\n    const parsedData = AccountSchema.parse(newAccount); // 使用 zod 校验\n    setSelectedAccount(parsedData);\n  };\n\n  return (\n    <AccountContext.Provider value={{ selectedAccount, setSelectedAccount }}>\n      {children}\n    </AccountContext.Provider>\n  );\n};\n\n// 自定义 Hook 来访问和更新账户信息\nexport const useAccount = () => {\n  const context = useContext(AccountContext);\n\n  if (!context) {\n    throw new Error(\"useAccount 必须在 AccountProvider 中使用\");\n  }\n\n  return context;\n};\n"],"names":[],"mappings":";;;;;AAEA;AACA;AAHA;;;;AAUA,aAAa;AACb,MAAM,+BAAiB,CAAA,GAAA,qMAAA,CAAA,gBAAa,AAAD,EAA6B;AAGzD,MAAM,kBAAkB,CAAC,EAAE,QAAQ,EAA2B;IACnE,QAAQ;IACR,MAAM,CAAC,iBAAiB,mBAAmB,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAkB;IAEvE,MAAM,wBAAwB,CAAC;QAC7B,MAAM,aAAa,uHAAA,CAAA,gBAAa,CAAC,KAAK,CAAC,aAAa,YAAY;QAChE,mBAAmB;IACrB;IAEA,qBACE,8OAAC,eAAe,QAAQ;QAAC,OAAO;YAAE;YAAiB;QAAmB;kBACnE;;;;;;AAGP;AAGO,MAAM,aAAa;IACxB,MAAM,UAAU,CAAA,GAAA,qMAAA,CAAA,aAAU,AAAD,EAAE;IAE3B,IAAI,CAAC,SAAS;QACZ,MAAM,IAAI,MAAM;IAClB;IAEA,OAAO;AACT"}},
    {"offset": {"line": 95, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}