{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 71, "column": 0}, "map": {"version":3,"sources":["file:///Users/cloudbyte-mac2/Downloads/rep/fukushi/src/model/schemas.ts"],"sourcesContent":["import { z } from 'zod';\n\n// アカウント\nexport const AccountSchema = z.object({\n  accountId: z.number(),\n  accountName: z.string(),\n  createdAt: z.string(),\n  updatedAt: z.string(),\n});\n\n// 患者\nexport const KanjyaSchema = z.object({\n  kanjyaId: z.number(),\n  accountId: z.number(),\n  kanjyaName: z.string(),\n  createdAt: z.string(),\n  updatedAt: z.string(),\n});\n\n// コメント\nexport const CommentSchema = z.object({\n  commentId: z.number(),\n  accountId: z.number(),\n  kanjyaId: z.number(),\n  content: z.string(),\n  createAccountName: z.string(),\n  createdAt: z.string(),\n  updatedAt: z.string(),\n});\n\nexport const CommentAddSchema = z.object({\n  accountId: z.number(),\n  kanjyaId: z.number(),\n  content: z.string(),\n  createAccountName: z.string(),\n});\n\nexport const CommentEditSchema = z.object({\n  commentId: z.number(),\n  content: z.string(),\n});\n\nexport const DbSchema = z.object({\n  accountList: z.array(AccountSchema),\n  kanjyaList: z.array(KanjyaSchema),\n  commentList: z.array(CommentSchema),\n});\n\n// 型の推論（オプション）\nexport type Account = z.infer<typeof AccountSchema>;\nexport type Kanjya = z.infer<typeof KanjyaSchema>;\nexport type Comment = z.infer<typeof CommentSchema>;\nexport type CommentAdd = z.infer<typeof CommentAddSchema>;\nexport type CommentEdit = z.infer<typeof CommentEditSchema>;\nexport type DbSchemaType = z.infer<typeof DbSchema>;"],"names":[],"mappings":";;;;;;;;AAAA;;AAGO,MAAM,gBAAgB,sIAAA,CAAA,IAAC,CAAC,MAAM,CAAC;IACpC,WAAW,sIAAA,CAAA,IAAC,CAAC,MAAM;IACnB,aAAa,sIAAA,CAAA,IAAC,CAAC,MAAM;IACrB,WAAW,sIAAA,CAAA,IAAC,CAAC,MAAM;IACnB,WAAW,sIAAA,CAAA,IAAC,CAAC,MAAM;AACrB;AAGO,MAAM,eAAe,sIAAA,CAAA,IAAC,CAAC,MAAM,CAAC;IACnC,UAAU,sIAAA,CAAA,IAAC,CAAC,MAAM;IAClB,WAAW,sIAAA,CAAA,IAAC,CAAC,MAAM;IACnB,YAAY,sIAAA,CAAA,IAAC,CAAC,MAAM;IACpB,WAAW,sIAAA,CAAA,IAAC,CAAC,MAAM;IACnB,WAAW,sIAAA,CAAA,IAAC,CAAC,MAAM;AACrB;AAGO,MAAM,gBAAgB,sIAAA,CAAA,IAAC,CAAC,MAAM,CAAC;IACpC,WAAW,sIAAA,CAAA,IAAC,CAAC,MAAM;IACnB,WAAW,sIAAA,CAAA,IAAC,CAAC,MAAM;IACnB,UAAU,sIAAA,CAAA,IAAC,CAAC,MAAM;IAClB,SAAS,sIAAA,CAAA,IAAC,CAAC,MAAM;IACjB,mBAAmB,sIAAA,CAAA,IAAC,CAAC,MAAM;IAC3B,WAAW,sIAAA,CAAA,IAAC,CAAC,MAAM;IACnB,WAAW,sIAAA,CAAA,IAAC,CAAC,MAAM;AACrB;AAEO,MAAM,mBAAmB,sIAAA,CAAA,IAAC,CAAC,MAAM,CAAC;IACvC,WAAW,sIAAA,CAAA,IAAC,CAAC,MAAM;IACnB,UAAU,sIAAA,CAAA,IAAC,CAAC,MAAM;IAClB,SAAS,sIAAA,CAAA,IAAC,CAAC,MAAM;IACjB,mBAAmB,sIAAA,CAAA,IAAC,CAAC,MAAM;AAC7B;AAEO,MAAM,oBAAoB,sIAAA,CAAA,IAAC,CAAC,MAAM,CAAC;IACxC,WAAW,sIAAA,CAAA,IAAC,CAAC,MAAM;IACnB,SAAS,sIAAA,CAAA,IAAC,CAAC,MAAM;AACnB;AAEO,MAAM,WAAW,sIAAA,CAAA,IAAC,CAAC,MAAM,CAAC;IAC/B,aAAa,sIAAA,CAAA,IAAC,CAAC,KAAK,CAAC;IACrB,YAAY,sIAAA,CAAA,IAAC,CAAC,KAAK,CAAC;IACpB,aAAa,sIAAA,CAAA,IAAC,CAAC,KAAK,CAAC;AACvB"}},
    {"offset": {"line": 118, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 124, "column": 0}, "map": {"version":3,"sources":["file:///Users/cloudbyte-mac2/Downloads/rep/fukushi/src/db/dao.ts"],"sourcesContent":["import fs from 'fs';\nimport path from 'path';\nimport { CommentSchema,Comment,DbSchemaType,DbSchema,CommentAdd,CommentAddSchema, CommentEdit } from '../model/schemas';\n\nconst dbPath = path.join(process.cwd(), 'src', 'db', 'db.json');\n\nlet dataSource:DbSchemaType = {\n    accountList:[],\n    kanjyaList:[],\n    commentList:[]\n};\n\nfunction loadDataSource(){\n    try {\n        // 读取 db.json 文件\n        const data = fs.readFileSync(dbPath, 'utf8');\n        const jsonData = JSON.parse(data);\n        // 转换\n        dataSource = DbSchema.parse(jsonData);\n    } catch (error) {\n        console.error('Error reading db.json:', error);\n    }\n}\n\nfunction save(){\n    fs.writeFileSync(dbPath, JSON.stringify(\n        dataSource, null, 2));\n}\n\nloadDataSource();\n\n// アカウント\nconst accountDao = {\n    list: () => dataSource.accountList\n}\n\n// 患者\nconst kanjyatDao = {\n    listByAccountId: (accountId:number) => {\n        return dataSource.kanjyaList.filter(\n            kanjya => kanjya.accountId === accountId\n        )\n    },\n    listByKanjyaId: (kanjyaId:number) => {\n        return dataSource.kanjyaList.filter(\n            kanjya => kanjya.kanjyaId === kanjyaId\n        )\n    },\n}\n\n// コメント\nconst commentDao = {\n    add: (comment:CommentAdd) => {\n        const maxId = dataSource.commentList[dataSource.commentList.length-1].commentId ;\n        const oldLength = dataSource.commentList.length;\n        dataSource.commentList = [\n            ...dataSource.commentList,\n            CommentSchema.parse({\n                commentId:  maxId + 1,\n                accountId: comment.accountId,\n                kanjyaId: comment.kanjyaId,\n                content: comment.content,\n                createAccountName: comment.createAccountName,\n                createdAt: formatDate(new Date()),\n                updatedAt: formatDate(new Date()),\n            })\n        ]\n        save();\n        return oldLength - dataSource.commentList.length;\n    },\n    delete: (commentId:number) => {\n        const oldLength = dataSource.commentList.length;\n        dataSource.commentList = dataSource.commentList.filter(\n            comment => comment.commentId !== commentId\n        );\n        save();\n        return dataSource.commentList.length - oldLength;\n    },\n    edit: (comment:CommentEdit) => {\n        const targetComment = dataSource.commentList.filter(\n            item => item.commentId === comment.commentId\n        )[0];\n        const old = targetComment.updatedAt;\n        targetComment.content = comment.content;\n        targetComment.updatedAt = formatDate(new Date());\n        save();\n        return old === targetComment.updatedAt;\n    },\n    list: (kanjyaId:number) => {\n        return dataSource.commentList.filter(\n            comment => \n                comment.kanjyaId === kanjyaId\n        )\n    }\n}\n\n/**\n * 日付フォーマット（yyyy.mm.dd hh:mm）\n * @param date \n * @returns \n */\nexport function formatDate(date : Date) {\n    const yyyy = date.getFullYear();\n    const mm = String(date.getMonth() + 1).padStart(2, '0');\n    const dd = String(date.getDate()).padStart(2, '0');\n    const hh = String(date.getHours()).padStart(2, '0');\n    const min = String(date.getMinutes()).padStart(2, '0');\n    return `${yyyy}.${mm}.${dd} ${hh}:${min}`;\n}\n\n\nexport { accountDao, commentDao, kanjyatDao }; \n"],"names":[],"mappings":";;;;;;AAAA;AACA;AACA;;;;AAEA,MAAM,SAAS,iGAAA,CAAA,UAAI,CAAC,IAAI,CAAC,QAAQ,GAAG,IAAI,OAAO,MAAM;AAErD,IAAI,aAA0B;IAC1B,aAAY,EAAE;IACd,YAAW,EAAE;IACb,aAAY,EAAE;AAClB;AAEA,SAAS;IACL,IAAI;QACA,gBAAgB;QAChB,MAAM,OAAO,6FAAA,CAAA,UAAE,CAAC,YAAY,CAAC,QAAQ;QACrC,MAAM,WAAW,KAAK,KAAK,CAAC;QAC5B,KAAK;QACL,aAAa,yHAAA,CAAA,WAAQ,CAAC,KAAK,CAAC;IAChC,EAAE,OAAO,OAAO;QACZ,QAAQ,KAAK,CAAC,0BAA0B;IAC5C;AACJ;AAEA,SAAS;IACL,6FAAA,CAAA,UAAE,CAAC,aAAa,CAAC,QAAQ,KAAK,SAAS,CACnC,YAAY,MAAM;AAC1B;AAEA;AAEA,QAAQ;AACR,MAAM,aAAa;IACf,MAAM,IAAM,WAAW,WAAW;AACtC;AAEA,KAAK;AACL,MAAM,aAAa;IACf,iBAAiB,CAAC;QACd,OAAO,WAAW,UAAU,CAAC,MAAM,CAC/B,CAAA,SAAU,OAAO,SAAS,KAAK;IAEvC;IACA,gBAAgB,CAAC;QACb,OAAO,WAAW,UAAU,CAAC,MAAM,CAC/B,CAAA,SAAU,OAAO,QAAQ,KAAK;IAEtC;AACJ;AAEA,OAAO;AACP,MAAM,aAAa;IACf,KAAK,CAAC;QACF,MAAM,QAAQ,WAAW,WAAW,CAAC,WAAW,WAAW,CAAC,MAAM,GAAC,EAAE,CAAC,SAAS;QAC/E,MAAM,YAAY,WAAW,WAAW,CAAC,MAAM;QAC/C,WAAW,WAAW,GAAG;eAClB,WAAW,WAAW;YACzB,yHAAA,CAAA,gBAAa,CAAC,KAAK,CAAC;gBAChB,WAAY,QAAQ;gBACpB,WAAW,QAAQ,SAAS;gBAC5B,UAAU,QAAQ,QAAQ;gBAC1B,SAAS,QAAQ,OAAO;gBACxB,mBAAmB,QAAQ,iBAAiB;gBAC5C,WAAW,WAAW,IAAI;gBAC1B,WAAW,WAAW,IAAI;YAC9B;SACH;QACD;QACA,OAAO,YAAY,WAAW,WAAW,CAAC,MAAM;IACpD;IACA,QAAQ,CAAC;QACL,MAAM,YAAY,WAAW,WAAW,CAAC,MAAM;QAC/C,WAAW,WAAW,GAAG,WAAW,WAAW,CAAC,MAAM,CAClD,CAAA,UAAW,QAAQ,SAAS,KAAK;QAErC;QACA,OAAO,WAAW,WAAW,CAAC,MAAM,GAAG;IAC3C;IACA,MAAM,CAAC;QACH,MAAM,gBAAgB,WAAW,WAAW,CAAC,MAAM,CAC/C,CAAA,OAAQ,KAAK,SAAS,KAAK,QAAQ,SAAS,CAC/C,CAAC,EAAE;QACJ,MAAM,MAAM,cAAc,SAAS;QACnC,cAAc,OAAO,GAAG,QAAQ,OAAO;QACvC,cAAc,SAAS,GAAG,WAAW,IAAI;QACzC;QACA,OAAO,QAAQ,cAAc,SAAS;IAC1C;IACA,MAAM,CAAC;QACH,OAAO,WAAW,WAAW,CAAC,MAAM,CAChC,CAAA,UACI,QAAQ,QAAQ,KAAK;IAEjC;AACJ;AAOO,SAAS,WAAW,IAAW;IAClC,MAAM,OAAO,KAAK,WAAW;IAC7B,MAAM,KAAK,OAAO,KAAK,QAAQ,KAAK,GAAG,QAAQ,CAAC,GAAG;IACnD,MAAM,KAAK,OAAO,KAAK,OAAO,IAAI,QAAQ,CAAC,GAAG;IAC9C,MAAM,KAAK,OAAO,KAAK,QAAQ,IAAI,QAAQ,CAAC,GAAG;IAC/C,MAAM,MAAM,OAAO,KAAK,UAAU,IAAI,QAAQ,CAAC,GAAG;IAClD,OAAO,GAAG,KAAK,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,KAAK;AAC7C"}},
    {"offset": {"line": 217, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 223, "column": 0}, "map": {"version":3,"sources":["file:///Users/cloudbyte-mac2/Downloads/rep/fukushi/src/app/api/comment/edit/route.ts"],"sourcesContent":["import { NextResponse } from 'next/server';\nimport  { commentDao } from  '@/db/dao';\n\nexport async function POST(request: Request) {\n  const jsonData = await request.json();\n  const { commentId, content } = jsonData;\n  const comment = {\n    commentId,\n    content,\n  }\n  const result = commentDao.edit(comment);\n  return NextResponse.json(result);\n}\n"],"names":[],"mappings":";;;AAAA;AACA;;;AAEO,eAAe,KAAK,OAAgB;IACzC,MAAM,WAAW,MAAM,QAAQ,IAAI;IACnC,MAAM,EAAE,SAAS,EAAE,OAAO,EAAE,GAAG;IAC/B,MAAM,UAAU;QACd;QACA;IACF;IACA,MAAM,SAAS,kHAAA,CAAA,aAAU,CAAC,IAAI,CAAC;IAC/B,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;AAC3B"}},
    {"offset": {"line": 240, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}